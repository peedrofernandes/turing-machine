// .container {
//   display: flex;
//   height: 120vh; /* Define a altura total da tela */
// }

// .left-panel, .right-panel {
//   flex: 1; /* Distribui o espaço igualmente entre os painéis */
// }

// .left-panel {
//   background-color: #f1f1f1; /* Cor de fundo do painel esquerdo */
// }

// .right-panel {
//   background-color: #eaeaea; /* Cor de fundo do painel direito */
// }

.nomeDaMaquina {
  -webkit-text-stroke-width: 1.5px; /* largura da borda */
  -webkit-text-stroke-color: blueviolet; /* cor da borda */
  font-family: 'Pacifico', cursive;
  font-size: 24px; 
  color: #333; 
}

.centralized{
  margin: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
}

#quadro {
  background-color: #000;
  padding: 15px;
  font-family: 'Courier New', monospace;
  color: #0f0;
  max-height: 220px; /* Altura máxima do elemento */
  overflow-y: auto;
}

.container-start {
  display: flex;
  align-items: center;
  justify-content: center;
  // height: 100vh;
}

.btn-start {
  background-color: #4CAF50;
  color: white;
  padding: 10px 20px;
  font-family: 'AtariFont', sans-serif;
  font-size: 16px;
  border: none;
  border-radius: 4px;
  font-family: 'Courier New', monospace;
  cursor: pointer;
}

.btn-start:hover {
  background-color: #0f0;
}

// .mTuring{
//   margin: 20px; /* Define uma margem de 20 pixels em todas as direções */
//   border: 10px solid #000; /* Define a cor do texto como branco */
// }
.corner-div {
  position: absolute; /* Define a posição absoluta */
  top: 10; /* Alinha a div no topo */
  left: 5%; /* Alinha a div na esquerda */
  width: 56px;
  height: 56px;
  background-color: red;
}

//////////////////////////////  /* Computação da máquina */ //////////////////////////////
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ul, li {
  list-style: none;
  margin: 0;
  padding: 0;
}

svg {
  position: relative;
}

$breakpoints: (
  xs: 0px,
  sm: 600px,
  md: 905px,
  lg: 1240px,
  xl: 1440px
);

@each $breakpoint, $width in $breakpoints {
  @media (min-width: $width) {
    @for $i from 1 through 10 {
      $value: ($i) * 4;
      .#{$breakpoint}-gap-#{$value} { gap: #{$value}px; } 
    } 
  }
}

.grid {
  // Nº de linhas pré-definidas do grid (1 até 12)
  @each $breakpoint, $width in $breakpoints {
    @for $i from 1 through 12 {
      &.r#{$i} { grid-template-rows: repeat($i, auto); }
      &.#{$breakpoint}-r#{$i} {
        @media (min-width: $width) { 
          grid-template-rows: repeat($i, auto)
        }
      }
    }
  }

  // Estilos aplicados na faixa de largura 0-599px (xs)
  display: grid;
  position: relative;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  width: 100%;
  padding: 0 16px;
  gap: 4px;

  // Estilos aplicados na faixa de largura 600-904px (sm)
  @media (min-width: 600px) {
    grid-template-columns: repeat(8, minmax(0, 1fr));
    padding: 0 32px;
    gap: 8px;
  }

  // Estilos aplicados na faixa de largura 905-1239px (md)
  @media (min-width: 905px) {
    grid-template-columns: repeat(12, minmax(0, 1fr));
    padding: 0;
    width: 840px;
    gap: 12px;
  }

  // Estilos aplicados na faixa de largura 1240-1439px (lg)
  @media (min-width: 1240px) {
    width: 100%;
    padding: 0 200px;
    gap: 16px;
  }

  // Estilos aplicados na faixa de largura 1440+px (xl) 
  @media (min-width: 1440px) { 
    padding: 0;
    width: 1040px;
  }

  .grid-item {
    display: flex;
    grid-column: span 1;
    & > * { flex-grow: 1; }

    // fr: full-row (ocupa todas as linhas de um grid com linhas pré-definidas)
    &.fr { grid-row: 1 / -1 }

    // Propriedades de span de linha e coluna para cada breakpoint
    @each $breakpoint, $width in $breakpoints {
      @media (min-width: $width) {
        &.#{$breakpoint}-fr { grid-row: 1 / -1 }
        @for $i from 1 through 12 {
          &.s#{$i} { grid-column: span $i }
          &.r#{$i} { grid-row: span $i }
          &.#{$breakpoint}-s#{$i} { grid-column: span $i }
          &.#{$breakpoint}-r#{$i} { grid-row: span $i }
        }
      }
    }

    // Propriedade de order para cada breakpoint
    @for $i from -1 through 4 { &.order-#{$i} { order: $i }};
    @each $breakpoint, $width in $breakpoints {
      @media (min-width: $width) {
        @for $i from -1 through 4 { &.#{$breakpoint}-order#{$i} { order: $i } } 
      }
    }

    // Expande até a metade de colunas do grid
    &.s-half {
      grid-column: span 2;
      @media (min-width: 600px) {
        grid-column: span 4;
      }
      @media (min-width: 905px) {
        grid-column: span 6;
      }
    }

    // Mantém o elemento isolado no grid (ocupado todas as colunas)
    &.isolated {
      grid-column: 1 / 5;
      @media (min-width: 600px) {
        grid-column: 1 / 9;
      }
      @media (min-width: 905px) {
        grid-column: 1 / 13;
      }
    }

    // Centraliza o elemento na grid, ignorando i colunas
    @for $i from 0 through 5 {
      &.center-#{$i} { grid-column: min(2, $i + 1) / max(4, 5 - $i) }
      @media (min-width: 600px) {
        &.center-#{$i} { grid-column: min(4, $i + 1) / max(6, 9 - $i) }
      }
      @media (min-width: 905px) {
        &.center-#{$i} { grid-column: min(6, $i + 1) / max(8, 13 - $i) }
      }
    }

  }
}


span {
  &.cor-preto {
    color: #111414;
  }
  &.cor-cinza {
    color: #00000060;
  }
  &.cor-vermelho {
    color: #dc3545;
  }
  &.cor-azul {
    color: #0d6efd;
  }
  &.cor-verde {
    color: #14A44D;
  }
  &.cor-amarelo {
    color: #E4A11B;
  }
}

.viewport {
  position: relative;
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 76px;
  padding: 60px 0;

  #settings {
    position: absolute;
    top: 0;
    left: 0;
    margin: 4px;
    cursor: pointer;
  }
}

#maquina-turing {
  


  #seta-cabecote {
    height: 48px;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #fadeout {
    // padding: 32px 0;
    position: relative;
    width: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        to right,
        #ffffff 0%,
        #ffffff 2%,
        #fff0 10%,
        #fff0 90%,
        #ffffff 98%,
        #ffffff 100%
      );
      opacity: 1;
      pointer-events: none;
  
    }
  

  #fita-container {
     transform: translateX(50%) translateX(-32px);
      transition-property: transform;
      transition-timing-function: ease;

    #fita {
        position: relative;
        display: flex;

        &.cor-preto {
          .celula {
            border-color: #111414;
          }
        }
        &.cor-cinza {
          .celula {
            box-shadow: 0 0 3px #00000060 ,inset 0 0 3px #00000060;
            border-color: #00000060;
          }
        }
        &.cor-vermelho {
          .celula {
            box-shadow: 0 0 3px #dc3545 ,inset 0 0 3px #dc3545;
            border-color: #dc3545;
          }
        }
        &.cor-azul {
          .celula {
            box-shadow: 0 0 3px #0d6efd ,inset 0 0 3px #0d6efd;
            border-color: #0d6efd;
          }
        }
        &.cor-verde {
          .celula {
            box-shadow: 0 0 3px #14A44D ,inset 0 0 3px #14A44D;
            border-color: #14A44D;
          }
        }
        &.cor-amarelo {
          box-shadow: 0 0 3px #E4A11B ,inset 0 0 3px #E4A11B;
          color: #E4A11B;
        }
      }

    }
  }
}

.celula {
  flex-shrink: 0;
  width: 64px;
  height: 64px;
  border: 4px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: 32px;
  margin-right: -4px;

  transition-property: color, border, box-shadow;
  transition-timing-function: ease;

  &:last-child {
    margin-right: 0;
  }
}

#control-bar {
  display: flex;
  justify-content: center;
  align-items: center;
  // width: 600px;
  padding: 0;

  // @media (max-width: 599px) {
  //   flex-direction: column;
  //   // width: 100%;
  //   padding: 0 48px;

  //   // & > :nth-child(1) {
  //   //   order: 2
  //   // }
  //   // & > :nth-child(2) {
  //   //   order: 1;
  //   // }
  // }

  #control-speed {
    display: flex;
    gap: 0;
    span#speed {
      display: flex;
      width: 64px;
      align-items: center;
      justify-content: center;
      font-weight: bold;
    }
  }


  svg {
    display: block;
  }

  button {
    border: none;
    outline: none;
    background-color: inherit;
    cursor: pointer;
  }

  & > * {
    flex-basis: 0;
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
  }
}    



#dados-mt {
  span, li {
    font-family: "Courier new", monospace;
  }
  #dados-correntes-mt {
    display: flex;
    justify-content: center;
    gap: 32px;
  }

  #transicoes {
    overflow-y: auto;
  }

  // #dados {
  //   display: flex;
  //   flex-wrap: wrap;
  //   gap: 8px;
    
  //   & > * {
  //     .card {
  //       height: 180px;
  //       overflow-y: auto;
  //     }
  //     flex-basis: calc(50% - 4px);
  //   }
  // }

  #estados-especiais {
    justify-content: center;

    & > * {
      flex-grow: 0;
    }
  }
}

ul#errors-container {
  position: fixed;
  bottom: 32px;
  right: 32px;
  width: 320px;

  li.error-message {
    transform: translateY(0);
    position: absolute;
    background-color: #dc3545;
    color: white;
    padding: 32px 24px;
    opacity: 0;
    transition: opacity 250ms ease-in-out, 
                transform 250ms ease-in-out;
    bottom: 0;
    right: 0;
    &:hover { background-color: #e75c6a; }

    .close {
      position: absolute;
      top: 4px;
      right: 4px;
      cursor: pointer;
    }

    div.error-message-bar {
      position: absolute;
      background-color: white;
      opacity: 0.6;
      height: 4px;
      bottom: 0;
      left: 0;
      width: 100%;
    }
  }
}